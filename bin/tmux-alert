#!/usr/bin/env bash

SCRIPT="$(basename $0)"
function usage() {
  echo "${SCRIPT} displays an alert using the window title on tmux. The window"
  echo "title changes to current time plus the first 8 characters of a message."
  echo
  echo "${SCRIPT} [-h|--help] [--window|-w]  [title] message"
  echo "  window: the window to display the message on, otherwise the window in"
  echo "          which the command was called is used."
  echo "  title: Used for logging only"
  echo "  message: The first 8 characters are set as the window title"
  echo "  help: Displays this message on the terminal"
}

while [ $# -gt 0 ]; do
  arg="$1"
  case $arg in
    --help|-h)
      usage
      exit 0
    ;;
    --window|-w)
      shift
      window=$1
    ;;
    *)
      break
    ;;
  esac
  shift
done

[[ -z ${window} ]] && window=${TMUX_PANE}
title=$1
message=$2
[[ -z "${message}" ]] && message="${title}" && title=
now=$(date '+%H:%M')

echo "${now} ${title} ${message}" >> "/tmp/tmux-alert-${USER}.log"

focused_window=$(tmux display-message -p -F '#{window_id}')
process_window=$(tmux display-message -t"${TMUX_PANE}" -p -F '#{window_id}')
# only display alert if the current window isn't focused
if [[ "${focused_window}" != "${process_window}" ]]; then
  # announce message over tmux
  notify-tmux --nostdout --count 3 "${title}" "${message}"
  # set window title
  tmux rename-window -t "${window}" "${now} ${message:0:8}"
  # trigger the tmux bell [only works for current tmux window == ${window}]
  echo -n -e "\a"
fi
