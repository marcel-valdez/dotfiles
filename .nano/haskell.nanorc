syntax "Haskell" "\.hs$"

## Keywords
color red "[ ](as|case|of|class|data|default|deriving|do|forall|foreign|hiding|if|then|else|import|infix|infixl|infixr|instance|let|in|mdo|module|newtype|qualified|type|where)[ ]"
color red "(^data|^foreign|^import|^infix|^infixl|^infixr|^instance|^module|^newtype|^type)[ ]"
color red "[ ](as$|case$|of$|class$|data$|default$|deriving$|do$|forall$|foreign$|hiding$|if$|then$|else$|import$|infix$|infixl$|infixr$|instance$|let$|in$|mdo$|module$|newtype$|qualified$|type$|where$)"

## Various symbols
color cyan "(\||@|!|:|_|~|=|\\|;|\(\)|,|\[|\]|\{|\})"

## Operators
color magenta "(==|/=|&&|\|\||<|>|<=|>=)"

## Various symbols
color cyan "(->|<-)"
color magenta "\.|\$"

## Data constructors
color magenta "(True|False|Nothing|Just|Left|Right|LT|EQ|GT)"

## Data classes
color magenta "[ ](Read|Show|Enum|Eq|Ord|Data|Bounded|Typeable|Num|Real|Fractional|Integral|RealFrac|Floating|RealFloat|Monad|MonadPlus|Functor)"

## Strings
color yellow ""[^\"]*""

## Comments
color green "--.*"
color green start="\{-" end="-\}"

color brightred "undefined"

# trailing whitespace
color ,blue "[[:space:]]+$"
# multiples of eight spaces at the start a line
# (after zero or more tabs) should be a tab
color ,blue "^([TAB]*[ ]{8})+"
# tabs after spaces
color ,yellow "( )+TAB"
# highlight indents that have an odd number of spaces
color ,red "^(([ ]{2})+|(TAB+))*[ ]{1}[^ ]{1}"
# lines longer than 100 characters
color ,yellow "^(.{100})|(TAB.{63})|(TAB{2}.{55})|(TAB{3}.{47}).+$"
